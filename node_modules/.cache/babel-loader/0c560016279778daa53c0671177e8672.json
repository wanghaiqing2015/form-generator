{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\form-generator\\src\\views\\index\\JsonDrawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\src\\views\\index\\JsonDrawer.vue","mtime":1619538169718},{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgYmVhdXRpZmllckNvbmYgfSBmcm9tICdAL3V0aWxzL2luZGV4JzsKaW1wb3J0IENsaXBib2FyZEpTIGZyb20gJ2NsaXBib2FyZCc7CmltcG9ydCB7IHNhdmVBcyB9IGZyb20gJ2ZpbGUtc2F2ZXInOwppbXBvcnQgbG9hZE1vbmFjbyBmcm9tICdAL3V0aWxzL2xvYWRNb25hY28nOwppbXBvcnQgbG9hZEJlYXV0aWZpZXIgZnJvbSAnQC91dGlscy9sb2FkQmVhdXRpZmllcic7CnZhciBiZWF1dGlmaWVyOwp2YXIgbW9uYWNvOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czoge30sCiAgcHJvcHM6IHsKICAgIGpzb25TdHI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7fTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICB3YXRjaDoge30sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5wcmV2ZW50RGVmYXVsdFNhdmUpOwogICAgdmFyIGNsaXBib2FyZCA9IG5ldyBDbGlwYm9hcmRKUygnLmNvcHktanNvbi1idG4nLCB7CiAgICAgIHRleHQ6IGZ1bmN0aW9uIHRleHQodHJpZ2dlcikgewogICAgICAgIF90aGlzLiRub3RpZnkoewogICAgICAgICAgdGl0bGU6ICfmiJDlip8nLAogICAgICAgICAgbWVzc2FnZTogJ+S7o+eggeW3suWkjeWItuWIsOWJquWIh+adv++8jOWPr+eymOi0tOOAgicsCiAgICAgICAgICB0eXBlOiAnc3VjY2VzcycKICAgICAgICB9KTsKCiAgICAgICAgcmV0dXJuIF90aGlzLmJlYXV0aWZpZXJKc29uOwogICAgICB9CiAgICB9KTsKICAgIGNsaXBib2FyZC5vbignZXJyb3InLCBmdW5jdGlvbiAoZSkgewogICAgICBfdGhpcy4kbWVzc2FnZS5lcnJvcign5Luj56CB5aSN5Yi25aSx6LSlJyk7CiAgICB9KTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMucHJldmVudERlZmF1bHRTYXZlKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHByZXZlbnREZWZhdWx0U2F2ZTogZnVuY3Rpb24gcHJldmVudERlZmF1bHRTYXZlKGUpIHsKICAgICAgaWYgKGUua2V5ID09PSAncycgJiYgKGUubWV0YUtleSB8fCBlLmN0cmxLZXkpKSB7CiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB9CiAgICB9LAogICAgb25PcGVuOiBmdW5jdGlvbiBvbk9wZW4oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgbG9hZEJlYXV0aWZpZXIoZnVuY3Rpb24gKGJ0ZikgewogICAgICAgIGJlYXV0aWZpZXIgPSBidGY7CiAgICAgICAgX3RoaXMyLmJlYXV0aWZpZXJKc29uID0gYmVhdXRpZmllci5qcyhfdGhpczIuanNvblN0ciwgYmVhdXRpZmllckNvbmYuanMpOwogICAgICAgIGxvYWRNb25hY28oZnVuY3Rpb24gKHZhbCkgewogICAgICAgICAgbW9uYWNvID0gdmFsOwoKICAgICAgICAgIF90aGlzMi5zZXRFZGl0b3JWYWx1ZSgnZWRpdG9ySnNvbicsIF90aGlzMi5iZWF1dGlmaWVySnNvbik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIG9uQ2xvc2U6IGZ1bmN0aW9uIG9uQ2xvc2UoKSB7fSwKICAgIHNldEVkaXRvclZhbHVlOiBmdW5jdGlvbiBzZXRFZGl0b3JWYWx1ZShpZCwgY29kZVN0cikgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmpzb25FZGl0b3IpIHsKICAgICAgICB0aGlzLmpzb25FZGl0b3Iuc2V0VmFsdWUoY29kZVN0cik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5qc29uRWRpdG9yID0gbW9uYWNvLmVkaXRvci5jcmVhdGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpLCB7CiAgICAgICAgICB2YWx1ZTogY29kZVN0ciwKICAgICAgICAgIHRoZW1lOiAndnMtZGFyaycsCiAgICAgICAgICBsYW5ndWFnZTogJ2pzb24nLAogICAgICAgICAgYXV0b21hdGljTGF5b3V0OiB0cnVlCiAgICAgICAgfSk7IC8vIGN0cmwgKyBzIOWIt+aWsAoKICAgICAgICB0aGlzLmpzb25FZGl0b3Iub25LZXlEb3duKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBpZiAoZS5rZXlDb2RlID09PSA0OSAmJiAoZS5tZXRhS2V5IHx8IGUuY3RybEtleSkpIHsKICAgICAgICAgICAgX3RoaXMzLnJlZnJlc2goKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGV4cG9ydEpzb25GaWxlOiBmdW5jdGlvbiBleHBvcnRKc29uRmlsZSgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLiRwcm9tcHQoJ+aWh+S7tuWQjTonLCAn5a+85Ye65paH5Lu2JywgewogICAgICAgIGlucHV0VmFsdWU6ICIiLmNvbmNhdCgrbmV3IERhdGUoKSwgIi5qc29uIiksCiAgICAgICAgY2xvc2VPbkNsaWNrTW9kYWw6IGZhbHNlLAogICAgICAgIGlucHV0UGxhY2Vob2xkZXI6ICfor7fovpPlhaXmlofku7blkI0nCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgdmFsdWUgPSBfcmVmLnZhbHVlOwogICAgICAgIGlmICghdmFsdWUpIHZhbHVlID0gIiIuY29uY2F0KCtuZXcgRGF0ZSgpLCAiLmpzb24iKTsKCiAgICAgICAgdmFyIGNvZGVTdHIgPSBfdGhpczQuanNvbkVkaXRvci5nZXRWYWx1ZSgpOwoKICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtjb2RlU3RyXSwgewogICAgICAgICAgdHlwZTogJ3RleHQvcGxhaW47Y2hhcnNldD11dGYtOCcKICAgICAgICB9KTsKICAgICAgICBzYXZlQXMoYmxvYiwgdmFsdWUpOwogICAgICB9KTsKICAgIH0sCiAgICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKCkgewogICAgICB0cnkgewogICAgICAgIHRoaXMuJGVtaXQoJ3JlZnJlc2gnLCBKU09OLnBhcnNlKHRoaXMuanNvbkVkaXRvci5nZXRWYWx1ZSgpKSk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgIHRpdGxlOiAn6ZSZ6K+vJywKICAgICAgICAgIG1lc3NhZ2U6ICdKU09O5qC85byP6ZSZ6K+v77yM6K+35qOA5p+lJywKICAgICAgICAgIHR5cGU6ICdlcnJvcicKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["JsonDrawer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-drawer v-bind=\"$attrs\" v-on=\"$listeners\" @opened=\"onOpen\" @close=\"onClose\">\n      <div class=\"action-bar\" :style=\"{'text-align': 'left'}\">\n        <span class=\"bar-btn\" @click=\"refresh\">\n          <i class=\"el-icon-refresh\" />\n          刷新\n        </span>\n        <span ref=\"copyBtn\" class=\"bar-btn copy-json-btn\">\n          <i class=\"el-icon-document-copy\" />\n          复制JSON\n        </span>\n        <span class=\"bar-btn\" @click=\"exportJsonFile\">\n          <i class=\"el-icon-download\" />\n          导出JSON文件\n        </span>\n        <span class=\"bar-btn delete-btn\" @click=\"$emit('update:visible', false)\">\n          <i class=\"el-icon-circle-close\" />\n          关闭\n        </span>\n      </div>\n      <div id=\"editorJson\" class=\"json-editor\" />\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport { beautifierConf } from '@/utils/index'\nimport ClipboardJS from 'clipboard'\nimport { saveAs } from 'file-saver'\nimport loadMonaco from '@/utils/loadMonaco'\nimport loadBeautifier from '@/utils/loadBeautifier'\n\nlet beautifier\nlet monaco\n\nexport default {\n  components: {},\n  props: {\n    jsonStr: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {}\n  },\n  computed: {},\n  watch: {},\n  created() {},\n  mounted() {\n    window.addEventListener('keydown', this.preventDefaultSave)\n    const clipboard = new ClipboardJS('.copy-json-btn', {\n      text: trigger => {\n        this.$notify({\n          title: '成功',\n          message: '代码已复制到剪切板，可粘贴。',\n          type: 'success'\n        })\n        return this.beautifierJson\n      }\n    })\n    clipboard.on('error', e => {\n      this.$message.error('代码复制失败')\n    })\n  },\n  beforeDestroy() {\n    window.removeEventListener('keydown', this.preventDefaultSave)\n  },\n  methods: {\n    preventDefaultSave(e) {\n      if (e.key === 's' && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault()\n      }\n    },\n    onOpen() {\n      loadBeautifier(btf => {\n        beautifier = btf\n        this.beautifierJson = beautifier.js(this.jsonStr, beautifierConf.js)\n\n        loadMonaco(val => {\n          monaco = val\n          this.setEditorValue('editorJson', this.beautifierJson)\n        })\n      })\n    },\n    onClose() {},\n    setEditorValue(id, codeStr) {\n      if (this.jsonEditor) {\n        this.jsonEditor.setValue(codeStr)\n      } else {\n        this.jsonEditor = monaco.editor.create(document.getElementById(id), {\n          value: codeStr,\n          theme: 'vs-dark',\n          language: 'json',\n          automaticLayout: true\n        })\n        // ctrl + s 刷新\n        this.jsonEditor.onKeyDown(e => {\n          if (e.keyCode === 49 && (e.metaKey || e.ctrlKey)) {\n            this.refresh()\n          }\n        })\n      }\n    },\n    exportJsonFile() {\n      this.$prompt('文件名:', '导出文件', {\n        inputValue: `${+new Date()}.json`,\n        closeOnClickModal: false,\n        inputPlaceholder: '请输入文件名'\n      }).then(({ value }) => {\n        if (!value) value = `${+new Date()}.json`\n        const codeStr = this.jsonEditor.getValue()\n        const blob = new Blob([codeStr], { type: 'text/plain;charset=utf-8' })\n        saveAs(blob, value)\n      })\n    },\n    refresh() {\n      try {\n        this.$emit('refresh', JSON.parse(this.jsonEditor.getValue()))\n      } catch (error) {\n        this.$notify({\n          title: '错误',\n          message: 'JSON格式错误，请检查',\n          type: 'error'\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/mixin.scss';\n\n::v-deep .el-drawer__header {\n  display: none;\n}\n@include action-bar;\n\n.json-editor{\n  height: calc(100vh - 33px);\n}\n</style>\n"],"sourceRoot":"src/views/index"}]}