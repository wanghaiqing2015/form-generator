{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Administrator\\Desktop\\form-generator\\src\\components\\generator\\js.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\src\\components\\generator\\js.js","mtime":1619538169687},{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\form-generator\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}